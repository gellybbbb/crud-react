// import { useState } from 'react';
// import { IProduct } from './Product.type';

// type Props = {
//   onBackBtnClickedHnd: () => void;
//   onSubmitClickHnd: (data: IProduct) => void;
// };

// const AddProduct = (props: Props) => {
//   const [productName, setProductName] = useState('');
//   const [quantity, setQuantity] = useState(1); // Default to 1 to disallow 0
//   const [unitPrice, setUnitPrice] = useState(1); // Default to 1 to disallow 0

//   const { onBackBtnClickedHnd, onSubmitClickHnd } = props;

//   const onProductNameChangeHnd = (e: React.ChangeEvent<HTMLInputElement>) => {
//     setProductName(e.target.value);
//   };

//   const onQuantityChangeHnd = (e: React.ChangeEvent<HTMLInputElement>) => {
//     const value = Number(e.target.value);
//     setQuantity(value > 0 ? value : 1); // Ensure quantity is at least 1
//   };

//   const onUnitPriceChangeHnd = (e: React.ChangeEvent<HTMLInputElement>) => {
//     const value = Number(e.target.value);
//     setUnitPrice(value > 0 ? value : 1); // Ensure unit price is at least 1
//   };

//   const onSubmitBtnClickHnd = (e: React.FormEvent) => {
//     e.preventDefault();

//     // Check if the product name is empty
//     if (!productName.trim()) {
//       alert("Product name cannot be empty");
//       return;
//     }

//     const data: IProduct = {
//       id: new Date().toJSON().toString(),
//       name: productName,
//       quantity: quantity,
//       price: unitPrice,
//       created_date: new Date(),
//       updated_date: new Date(),
//       user_id: '1',
//     };

//     console.log('Adding product:', data);
//     onSubmitClickHnd(data);
//   };

//   return (
//     <>
//       <h2 className='text-success'>Add Products</h2>
//       <form className="row g-3 " onSubmit={onSubmitBtnClickHnd}>
//         <div className='col-md-12'>
//           <label className='form-label'>Name:</label>
//           <input
//             className='form-control'
//             type="text"
//             value={productName}
//             onChange={onProductNameChangeHnd}
//           />
//         </div>
//         <div className='col-md-6'>
//           <label className='form-label'>Quantity:</label>
//           <input
//             className='form-control'
//             type="number"
//             value={quantity}
//             onChange={onQuantityChangeHnd}
//           />
//         </div>
//         <div className='col-md-6'>
//           <label className='form-label'>Unit Price:</label>
//           <input
//             className='form-control'
//             type="number"
//             value={unitPrice}
//             onChange={onUnitPriceChangeHnd}
//           />
//         </div>
//         <div>
//           <input className='btn btn-warning' type="button" value="Cancel" onClick={onBackBtnClickedHnd} />
//           <input className='btn btn-primary' type="submit" value="Add Product" />
//         </div>
//       </form>
//     </>
//   );
// };

// export default AddProduct;

import React, { useState } from 'react';
import { IProduct } from './Product.type';

type Props = {
  onBackBtnClickedHnd: () => void;
  onSubmitClickHnd: (data: IProduct) => void;
};

const AddProduct = (props: Props) => {
  const { onBackBtnClickedHnd, onSubmitClickHnd } = props;

  const [productObj, setProductObj] = useState<IProduct>({
    id: new Date().toJSON().toString(),
    name: '',
    quantity: 1, // Default to 1 to disallow 0
    price: 1, // Default to 1 to disallow 0
    created_date: new Date(),
    updated_date: new Date(),
    user_id: '1',
  });

  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { id, value } = e.target;
    setProductObj((prevProductObj) => ({
      ...prevProductObj,
      [id]: id === 'quantity' || id === 'price' ? Number(value) : value,
    }));
  };

  const onSubmitBtnClickHnd = (e: React.FormEvent) => {
    e.preventDefault();

    // Check if the product name is empty
    if (!productObj.name.trim()) {
      alert('Product name cannot be empty');
      return;
    }

    console.log('Adding product:', productObj);
    onSubmitClickHnd(productObj);
  };

  return (
    <>
      <h2 className='text-success'>Add Products</h2>
      <form className="row g-3" onSubmit={onSubmitBtnClickHnd}>
        <div className='col-md-12'>
          <label className='form-label'>Name:</label>
          <input
            className='form-control'
            type="text"
            id="name"
            value={productObj.name}
            onChange={onChange}
          />
        </div>
        <div className='col-md-6'>
          <label className='form-label'>Quantity:</label>
          <input
            className='form-control'
            type="number"
            id="quantity"
            value={productObj.quantity}
            onChange={onChange}
          />
        </div>
        <div className='col-md-6'>
          <label className='form-label'>Unit Price:</label>
          <input
            className='form-control'
            type="number"
            id="price"
            value={productObj.price}
            onChange={onChange}
          />
        </div>
        <div>
          <input className='btn btn-warning' type="button" value="Cancel" onClick={onBackBtnClickedHnd} />
          <input className='btn btn-primary' type="submit" value="Add Product" />
        </div>
      </form>
    </>
  );
};

export default AddProduct;

