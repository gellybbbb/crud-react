const express = require('express');
const jwt = require('jsonwebtoken');
const cors = require('cors');
const bcrypt = require('bcrypt'); // Add this line to import bcrypt

const app = express();
const port = 5000;

app.use(cors());
app.use(express.json());

const secretKey = 'mySecretKey';

const users = [];

// Login endpoint
app.post('/users/login', (req, res) => {
  // Your existing login code here
});

// Registration endpoint
app.post('/users/register', async (req, res) => {
  const { username, password } = req.body;

  try {
    // Hash the password using bcrypt
    const hashedPassword = await bcrypt.hash(password, 10);

    // Create a new user object with the hashed password
    const newUser = {
      id: users.length + 1,
      username,
      password: hashedPassword,
    };

    // Add the new user to the users array
    users.push(newUser);

    res.status(201).json({ message: 'Registration successful' });
  } catch (error) {
    console.error('Registration failed:', error);
    res.status(500).json({ message: 'Internal server error' });
  }
});

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});



// CreateAccount.js

import React, { useState } from 'react';
import axios from 'axios';

function CreateAccount({ setIsLogin }) {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleCreate = async () => {
    try {
      const response = await axios.post('http://localhost:5000/users/register', {
        username,
        password,
      });

      console.log(response);

      // Optionally, you can automatically log in the user after registration
      setIsLogin(true);
    } catch (error) {
      console.error('Register failed:', error);
    }
  };

  return (
    <div className='container align-items-center justify-content-center col-md-3 was-validated'>
      <h4 className='text-center mb-3'>Register an Account</h4>
      <div>
        <label className='form-label'>Username:</label>
        <input
          className='form-control'
          type="text"
          placeholder="Username"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
          required
        />
      </div>
      <div>
        <label className='form-label'>Password:</label>
        <input
          className='form-control'
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
        />
      </div>

      <button type="submit" onClick={handleCreate} className="btn btn-primary btn-lg mt-3">
        Sign up
      </button>
    </div>
  );
}

export default CreateAccount;
